{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Minecraft Redhook","text":"<p>Bring Redstone to the Real World! Redhook is a powerful Minecraft plugin that allows you to connect redstone signals to real-world actions through webhooks and API integrations.</p>"},{"location":"#features","title":"\ud83d\ude80 Features","text":"<ul> <li>Webhook Integration: Connect your redstone contraptions to Discord, Slack, or any web service</li> <li>Player Messages: Send messages to specific players or broadcast to all</li> <li>Easy Configuration: Simple YAML-based configuration</li> <li>Visual Binding Tool: Intuitive in-game tool for binding actions to blocks</li> <li>Multiple Trigger Conditions: Trigger on power, power loss, or both</li> <li>Extensible: Create custom actions through the plugin API</li> </ul>"},{"location":"#quick-start","title":"\ud83c\udfae Quick Start","text":"<ol> <li>Download the latest release from our GitHub releases page</li> <li>Place the JAR file in your server's <code>plugins</code> directory</li> <li>Restart your server</li> <li>Use <code>/redhook wand</code> to get started</li> </ol>"},{"location":"#example-configurations","title":"\ud83d\udcdd Example Configurations","text":""},{"location":"#discord-integration","title":"Discord Integration","text":"<pre><code>actions:\n    - id: discord_alert\n      type: HttpAction\n      label: \"Discord Alert\"\n      description:\n          - Sends an alert to Discord\n          - when redstone is triggered\n      url: \"https://discord.com/api/webhooks/your-webhook-url\"\n      method: \"POST\"\n      headers:\n          Content-Type: \"application/json\"\n      body: |\n          {\n              \"content\": \"Redstone signal detected!\",\n              \"embeds\": [{\n                  \"title\": \"Redstone Alert\",\n                  \"description\": \"A redstone signal was triggered\",\n                  \"color\": 16711680\n              }]\n          }\n</code></pre>"},{"location":"#player-notifications","title":"Player Notifications","text":"<pre><code>actions:\n    - id: welcome_message\n      type: PlayerMessageAction\n      label: \"Welcome Message\"\n      description:\n          - Sends a welcome message\n          - to all players\n      message: \"&amp;aWelcome to the server!\"\n      target: null\n</code></pre>"},{"location":"#use-cases","title":"\ud83c\udfaf Use Cases","text":"<ul> <li>Security Systems: Alert Discord when someone triggers a security system</li> <li>Welcome Messages: Send personalized messages when players enter specific areas</li> <li>Server Monitoring: Monitor redstone contraptions through webhook notifications</li> <li>Integration with External Services: Connect your Minecraft world to other applications</li> <li>Automated Notifications: Get notified about important events in your world</li> </ul>"},{"location":"#configuration","title":"\ud83d\udd27 Configuration","text":"<p>Redhook uses two main configuration files:</p> <ul> <li><code>actions.yml</code>: Define your actions and their configurations</li> <li><code>bindings.yml</code>: Store the relationships between redstone blocks and actions</li> </ul> <p>See our Configuration Guide for detailed information.</p>"},{"location":"#developer-api","title":"\ud83d\udee0\ufe0f Developer API","text":"<p>Want to create custom actions? Check out our Developer Documentation to learn how to extend Redhook with your own actions.</p>"},{"location":"#documentation","title":"\ud83d\udcda Documentation","text":"<ul> <li>Getting Started</li> <li>Configuration Guide</li> <li>Docker Server Guide</li> <li>Action Reference</li> <li>Developer Guide</li> </ul>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>We welcome contributions! Check out our GitHub repository to:</p> <ul> <li>Report bugs</li> <li>Suggest features</li> <li>Submit pull requests</li> <li>Improve documentation</li> </ul>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"_snippets/project-structure/","title":"Project structure","text":"<p>minecraft-redhook/ \u251c\u2500\u2500 src/ \u2502   \u251c\u2500\u2500 main/ \u2502   \u2502   \u251c\u2500\u2500 java/ \u2502   \u2502   \u2502   \u2514\u2500\u2500 io/github/n1ck145/redhook/ \u2502   \u2502   \u2502       \u251c\u2500\u2500 commands/          # Command implementations \u2502   \u2502   \u2502       \u251c\u2500\u2500 config/            # Configuration management \u2502   \u2502   \u2502       \u251c\u2500\u2500 listeners/         # Event listeners \u2502   \u2502   \u2502       \u251c\u2500\u2500 manager/           # Core management classes \u2502   \u2502   \u2502       \u2514\u2500\u2500 redstoneactions/   # Action implementations \u2502   \u2502   \u2514\u2500\u2500 resources/ \u2502   \u2502       \u251c\u2500\u2500 actions.yml           # Default actions configuration \u2502   \u2502       \u251c\u2500\u2500 bindings.yml          # Default bindings configuration \u2502   \u2502       \u2514\u2500\u2500 plugin.yml            # Plugin metadata \u2502   \u2514\u2500\u2500 test/                         # Test files \u251c\u2500\u2500 docs/                             # Documentation \u251c\u2500\u2500 build.gradle                      # Gradle build configuration \u2514\u2500\u2500 settings.gradle                   # Gradle settings</p>"},{"location":"developer-docs/getting-started/","title":"Getting Started","text":"<p>This guide will help you set up your development environment and start contributing to the Redhook plugin.</p>"},{"location":"developer-docs/getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Java Development Kit (JDK) 21 or later</li> <li>Gradle 8.8 or later</li> <li>An IDE (IntelliJ IDEA recommended)</li> <li>Git</li> </ul>"},{"location":"developer-docs/getting-started/#setting-up-the-development-environment","title":"Setting Up the Development Environment","text":"<ol> <li> <p>Clone the repository:     <pre><code>git clone https://github.com/N1CK145/minecraft-redhook.git\ncd minecraft-redhook\n</code></pre></p> </li> <li> <p>Open the project in your IDE:</p> <ul> <li>For IntelliJ IDEA: Open the project directory and select \"Open as Project\"</li> <li>The IDE should automatically detect the Gradle project and set it up</li> </ul> </li> <li> <p>Build the project:     <pre><code>./gradlew build\n</code></pre></p> </li> </ol>"},{"location":"developer-docs/getting-started/#project-structure","title":"Project Structure","text":"<pre><code>minecraft-redhook/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 main/\n\u2502   \u2502   \u251c\u2500\u2500 java/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 io/github/n1ck145/redhook/\n\u2502   \u2502   \u2502       \u251c\u2500\u2500 commands/          # Command implementations\n\u2502   \u2502   \u2502       \u251c\u2500\u2500 config/            # Configuration management\n\u2502   \u2502   \u2502       \u251c\u2500\u2500 listeners/         # Event listeners\n\u2502   \u2502   \u2502       \u251c\u2500\u2500 manager/           # Core management classes\n\u2502   \u2502   \u2502       \u2514\u2500\u2500 redstoneactions/   # Action implementations\n\u2502   \u2502   \u2514\u2500\u2500 resources/\n\u2502   \u2502       \u251c\u2500\u2500 actions.yml           # Default actions configuration\n\u2502   \u2502       \u251c\u2500\u2500 bindings.yml          # Default bindings configuration\n\u2502   \u2502       \u2514\u2500\u2500 plugin.yml            # Plugin metadata\n\u2502   \u2514\u2500\u2500 test/                         # Test files\n\u251c\u2500\u2500 docs/                             # Documentation\n\u251c\u2500\u2500 build.gradle                      # Gradle build configuration\n\u2514\u2500\u2500 settings.gradle                   # Gradle settings\n</code></pre>"},{"location":"developer-docs/getting-started/#creating-a-new-action","title":"Creating a New Action","text":"<ol> <li> <p>Create a new class in the <code>redstoneactions</code> package that extends <code>RedstoneAction</code>:     <pre><code>public class ExampleAction implements RedstoneAction {\n    private static final Material material = Material.DIAMOND;\n    private final String id;\n    private final String label;\n    private String[] description;\n\n    public ExampleAction(String id, String label, String[] description) {\n        this.id = id;\n        this.label = label;\n        this.description = description;\n    }\n\n    @Override\n    public void execute(Player trigger) {\n        Bukkit.broadcastMessage(\"Example action executed!\");\n    }\n\n    @Override\n    public ItemStack getIcon() {\n        String title = ColorMapper.map(label);\n        String[] lore = Arrays.stream(description).map(ColorMapper::map).toArray(String[]::new);\n\n        ItemStack item = new ItemStack(material);\n        ItemMeta meta = item.getItemMeta();\n        meta.setDisplayName(title);\n        meta.setLore(Arrays.asList(lore));\n        item.setItemMeta(meta);\n\n        return item;\n    }\n\n    @Override\n    public Map&lt;String, Object&gt; serialize() {\n        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n\n        map.put(\"id\", id);\n        map.put(\"type\", ActionRegistry.getTypeName(this));\n        map.put(\"label\", label);\n        map.put(\"description\", description);\n\n        return map;\n    }\n\n    public static ExampleAction deserialize(Map&lt;?, ?&gt; map) {\n        String id = (String) map.get(\"id\");\n        String label = (String) map.get(\"label\");\n        ArrayList&lt;String&gt; description = (ArrayList&lt;String&gt;) map.get(\"description\");\n        String[] descriptionArray = description == null ? new String[0] : description.toArray(new String[0]);\n\n        return new ExampleAction(id, label, descriptionArray);\n    }\n\n    @Override\n    public String getId() {\n        return id;\n    }\n\n    @Override\n    public String getLabel() {\n        return label;\n    }\n\n    @Override\n    public String[] getDescription() {\n        return description;\n    }\n}   \n</code></pre></p> </li> <li> <p>Register your action in <code>RedhookPlugin.java</code>:     <pre><code>private void registerActionTypes() {\n    ActionFactory.register(MyCustomAction.class, MyCustomAction::deserialize);\n}\n</code></pre></p> </li> <li> <p>Add documentation for your action in <code>docs/references/actions/</code></p> </li> </ol>"},{"location":"developer-docs/getting-started/#development-workflow","title":"Development Workflow","text":"<ol> <li> <p>Create a new branch for your feature:     <pre><code>git checkout -b feature/my-new-feature\n</code></pre></p> </li> <li> <p>Make your changes and test them:</p> <ul> <li>Use the provided test server setup</li> <li>Test your changes thoroughly</li> <li>Follow the code style guidelines</li> </ul> </li> <li> <p>Build and test:     <pre><code>./gradlew build\n</code></pre></p> </li> <li> <p>Create a pull request:</p> <ul> <li>Push your changes to GitHub</li> <li>Create a pull request with a clear description</li> <li>Wait for review and feedback</li> </ul> </li> </ol>"},{"location":"developer-docs/getting-started/#testing","title":"Testing","text":"<ol> <li> <p>Setup a local minecraft paper server</p> </li> <li> <p>Copy the built .jar in your plugins directory</p> </li> <li> <p>The test server will be available at <code>localhost:25565</code></p> </li> <li> <p>Use the following commands for testing:</p> <ul> <li><code>/redhook reload</code> - Reload the plugin</li> <li><code>/redhook wand</code> - Get the binding tool</li> <li><code>/redhook debug</code> - Gets you a debug tool for debugging actions</li> </ul> </li> </ol>"},{"location":"developer-docs/getting-started/#code-style-guidelines","title":"Code Style Guidelines","text":"<ul> <li>Follow Java naming conventions</li> <li>Use meaningful variable and method names</li> <li>Add comments for complex logic</li> <li>Keep methods focused and small</li> <li>Document public APIs</li> <li>Write unit tests for new features (optional)</li> </ul>"},{"location":"developer-docs/getting-started/#building-for-production","title":"Building for Production","text":"<ol> <li> <p>Create a release build:     <pre><code>./gradlew build\n</code></pre></p> </li> <li> <p>Find the JAR file in <code>build/libs/</code></p> </li> <li> <p>Test the production build in a clean environment</p> </li> </ol>"},{"location":"developer-docs/getting-started/#building-documentation","title":"Building Documentation","text":"<p>The project uses MkDocs with the Material theme for documentation. Here's how to set up and build the documentation:</p>"},{"location":"developer-docs/getting-started/#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Python 3.8 or later</li> <li>pip (Python package manager)</li> </ul>"},{"location":"developer-docs/getting-started/#setup-documentation-environment","title":"Setup Documentation Environment","text":"<ol> <li> <p>Create and activate a virtual environment:     <pre><code># Windows\npython -m venv .venv\n.venv\\Scripts\\activate\n\n# Linux/macOS\npython3 -m venv .venv\nsource .venv/bin/activate\n</code></pre></p> </li> <li> <p>Install required packages:     <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> </ol>"},{"location":"developer-docs/getting-started/#running-documentation","title":"Running Documentation","text":"<ol> <li> <p>Start the development server:     <pre><code>mkdocs serve\n</code></pre>    This will start a local server at <code>http://127.0.0.1:8000</code></p> </li> <li> <p>Build the documentation:     <pre><code>mkdocs build\n</code></pre>    This creates a <code>site/</code> directory with the built documentation</p> </li> </ol>"},{"location":"developer-docs/getting-started/#automatic-documentation-builds","title":"Automatic Documentation Builds","text":"<p>The documentation is automatically built and deployed through GitHub Actions:</p> <ol> <li>Every push to the <code>main</code> branch triggers a documentation build</li> <li>The built documentation is automatically deployed to GitHub Pages</li> <li>The latest documentation is always available at <code>https://n1ck145.github.io/minecraft-redhook/</code></li> </ol> <p>You don't need to manually build and deploy the documentation. Just push your changes to the repository, and GitHub Actions will handle the rest.</p>"},{"location":"developer-docs/getting-started/#troubleshooting","title":"Troubleshooting","text":"<ol> <li> <p>If the development server fails to start:</p> <ul> <li>Check if the virtual environment is activated</li> <li>Verify all dependencies are installed</li> <li>Check for syntax errors in markdown files</li> </ul> </li> <li> <p>If the build fails:</p> <ul> <li>Check for invalid YAML syntax in mkdocs.yml</li> <li>Verify all referenced files exist</li> <li>Check for invalid markdown syntax</li> </ul> </li> </ol>"},{"location":"developer-docs/getting-started/#contributing","title":"Contributing","text":"<ol> <li>Fork the repository</li> <li>Create your feature branch</li> <li>Commit your changes</li> <li>Push to the branch</li> <li>Create a pull request</li> </ol>"},{"location":"developer-docs/getting-started/#need-help","title":"Need Help?","text":"<ul> <li>Check the GitHub Issues</li> <li>Review the documentation</li> </ul>"},{"location":"getting-started/configuration/","title":"Configuration","text":"<p>Redhook uses two main configuration files to manage actions and their bindings to redstone blocks:</p> <ul> <li><code>actions.yml</code>: Defines the available actions and their configurations</li> <li><code>bindings.yml</code>: Stores the bindings between redstone blocks and actions</li> </ul>"},{"location":"getting-started/configuration/#actions-configuration","title":"Actions Configuration","text":"<p>The <code>actions.yml</code> file is located in your server's <code>plugins/Redhook</code> directory. This file defines all available actions that can be triggered by redstone signals.</p>"},{"location":"getting-started/configuration/#basic-structure","title":"Basic Structure","text":"<pre><code>actions:\n    - id: unique_action_id          # Unique identifier for this action\n      type: ActionType              # The type of action to execute\n      label: \"Friendly Name\"        # Display name for the action\n      description:                  # Multi-line description\n          - First line\n          - Second line\n\n      # Action-specific configuration\n      # These fields vary based on the action type\n</code></pre>"},{"location":"getting-started/configuration/#available-action-types","title":"Available Action Types","text":"<p>Looking for a specific action?</p> <p>You can find all actions here</p>"},{"location":"getting-started/configuration/#player-message-action","title":"Player Message Action","text":"<p>Sends a chat message to one or more players.</p> <pre><code>actions:\n    - id: player_hello\n      type: PlayerMessageAction\n      label: \"Welcome Message\"\n      description:\n          - Sends a welcome message\n          - to all players\n\n      # Action-specific configuration\n      message: \"Welcome to the server!\"    # The message to send\n      target: null                         # Target player name (null for broadcast)\n</code></pre>"},{"location":"getting-started/configuration/#http-action","title":"HTTP Action","text":"<p>Makes HTTP requests to external services.</p> <pre><code>actions:\n    - id: webhook_notification\n      type: HttpAction\n      label: \"Discord Webhook\"\n      description:\n          - Sends a notification\n          - to Discord channel\n\n      # Action-specific configuration\n      url: \"https://discord.com/api/webhooks/...\"\n      method: \"POST\"\n      headers:\n          Content-Type: \"application/json\"\n      body: |\n          {\n              \"content\": \"Redstone signal detected!\"\n          }\n</code></pre>"},{"location":"getting-started/configuration/#bindings-configuration","title":"Bindings Configuration","text":"<p>The <code>bindings.yml</code> file stores the relationships between redstone blocks and actions. This file is automatically managed by the plugin and should not be edited manually.</p>"},{"location":"getting-started/configuration/#structure","title":"Structure","text":"<pre><code>bindings:\n    - world: \"world\"                # World name\n      x: 100                        # X coordinate\n      y: 64                         # Y coordinate\n      z: 200                        # Z coordinate\n      instances:                    # List of actions bound to this block\n          - actionId: \"player_hello\"\n            triggerCondition: \"POWER_ON\"  # POWER_ON, POWER_OFF, or BOTH\n</code></pre>"},{"location":"getting-started/configuration/#managing-configuration","title":"Managing Configuration","text":""},{"location":"getting-started/configuration/#reloading-configuration","title":"Reloading Configuration","text":"<p>To apply changes to your configuration files:</p> <ol> <li>Edit the <code>actions.yml</code> file</li> <li>Run the command <code>/redhook reload</code></li> </ol>"},{"location":"getting-started/configuration/#creating-new-actions","title":"Creating New Actions","text":"<ol> <li>Open <code>actions.yml</code> in your server's <code>plugins/Redhook</code> directory</li> <li>Add a new action configuration following the structure above</li> <li>Save the file and run <code>/redhook reload</code></li> </ol>"},{"location":"getting-started/configuration/#binding-actions-to-blocks","title":"Binding Actions to Blocks","text":"<ol> <li>Obtain the Action Binding Tool using <code>/redhook wand</code></li> <li>Left-click the target block to begin binding</li> <li>Select your configured action from the menu</li> <li>Choose the trigger condition:<ul> <li>On redstone power</li> <li>On redstone power loss</li> <li>Both conditions</li> </ul> </li> <li>Test the configuration by placing a redstone lever and toggling it</li> </ol>"},{"location":"getting-started/configuration/#best-practices","title":"Best Practices","text":"<ul> <li>Use descriptive IDs for your actions</li> <li>Keep action labels clear and concise</li> <li>Document complex actions with detailed descriptions</li> <li>Test new configurations in a safe environment</li> <li>Back up your configuration files before making major changes</li> </ul>"},{"location":"getting-started/docker-server/","title":"Running the Server with Docker","text":"<p>This guide will help you set up and run the Minecraft server using Docker.</p>"},{"location":"getting-started/docker-server/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker installed on your system</li> <li>Docker Compose installed on your system</li> </ul>"},{"location":"getting-started/docker-server/#quick-start","title":"Quick Start","text":"<ol> <li> <p>Navigate to the <code>docker</code> directory in the project root:    <pre><code>cd docker\n</code></pre></p> </li> <li> <p>Start the server:    <pre><code>docker-compose up -d\n</code></pre></p> </li> </ol> <p>The server will start in detached mode. You can connect to it using the default Minecraft port (25565).</p>"},{"location":"getting-started/docker-server/#server-configuration","title":"Server Configuration","text":"<p>The server is configured using environment variables in the <code>docker-compose.yml</code> file. Here are the default settings:</p> <ul> <li>Server Type: Paper</li> <li>Version: 1.21.4</li> <li>Memory: 2GB</li> <li>Difficulty: Normal</li> <li>MOTD: \"RedHook Development Server\"</li> <li>RCON: Enabled (Port: 25575, Password: minecraft)</li> </ul>"},{"location":"getting-started/docker-server/#customizing-configuration","title":"Customizing Configuration","text":"<p>To modify these settings, edit the <code>docker-compose.yml</code> file. Here are some common customizations:</p> <pre><code>environment:\n  MEMORY: \"4G\"              # Increase memory allocation\n  DIFFICULTY: \"hard\"        # Change difficulty\n  MOTD: \"My Custom Server\"  # Change server message\n</code></pre>"},{"location":"getting-started/docker-server/#managing-the-server","title":"Managing the Server","text":""},{"location":"getting-started/docker-server/#viewing-logs","title":"Viewing Logs","text":"<p>To view server logs: <pre><code>docker-compose logs -f\n</code></pre></p>"},{"location":"getting-started/docker-server/#stopping-the-server","title":"Stopping the Server","text":"<p>To stop the server: <pre><code>docker-compose down\n</code></pre></p>"},{"location":"getting-started/docker-server/#restarting-the-server","title":"Restarting the Server","text":"<p>To restart the server: <pre><code>docker-compose restart\n</code></pre></p>"},{"location":"getting-started/docker-server/#data-persistence","title":"Data Persistence","text":"<p>Server data is stored in the <code>docker/data</code> directory, which is mounted as a volume. This means: - World data persists between restarts - Server configuration files are preserved - You can backup the <code>data</code> directory to save your server state</p>"},{"location":"getting-started/docker-server/#rcon-access","title":"RCON Access","text":"<p>The server has RCON enabled for remote administration: - Port: 25575 - Password: minecraft</p> <p>You can use any RCON client to connect to the server for administrative tasks.</p>"},{"location":"getting-started/docker-server/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/docker-server/#common-issues","title":"Common Issues","text":"<ol> <li>Port Already in Use</li> <li>Ensure no other Minecraft server is running on port 25565</li> <li> <p>Check if the port is available: <code>netstat -an | findstr 25565</code></p> </li> <li> <p>Server Not Starting</p> </li> <li>Check Docker logs: <code>docker-compose logs</code></li> <li> <p>Verify Docker is running: <code>docker ps</code></p> </li> <li> <p>Memory Issues</p> </li> <li>Adjust the <code>MEMORY</code> environment variable in <code>docker-compose.yml</code></li> <li>Ensure your system has enough available RAM</li> </ol>"},{"location":"getting-started/docker-server/#getting-help","title":"Getting Help","text":"<p>If you encounter any issues not covered here: 1. Check the itzg/minecraft-server documentation 2. Review the server logs for specific error messages 3. Open an issue in the project repository </p>"},{"location":"getting-started/quickstart/","title":"Quickstart","text":""},{"location":"getting-started/quickstart/#installation","title":"Installation","text":"<p>All releases are available on our GitHub repository.</p> <p>Looking for a specific version?</p> <p>Browse all versions in our releases section</p> <ol> <li>Download the latest release (.jar file)</li> <li>Place the .jar file in your server's <code>plugins</code> directory</li> <li>Restart or reload your server</li> </ol>"},{"location":"getting-started/quickstart/#configuring-actions","title":"Configuring Actions","text":"<ol> <li>Navigate to the <code>plugins/Redhook</code> directory and open <code>actions.yml</code></li> <li> <p>Add a new action configuration to your actions list:</p> <pre><code>actions:\n    - id: player_hello                 # Unique identifier for this action\n      type: PlayerMessageAction        # The action type to execute\n      label: \"Welcome Player\"          # Display name for the action\n      description:                     # Multi-line description\n          - Sends a welcome message\n          - to all players\n\n      # Action-specific configuration\n      message: \"Welcome!\"              # Message content\n      target: null                     # Target player (null for broadcast)\n</code></pre> </li> <li> <p>Apply changes with <code>/redhook reload</code></p> </li> </ol>"},{"location":"getting-started/quickstart/#binding-actions-to-blocks","title":"Binding Actions to Blocks","text":"<ol> <li>Obtain the Action Binding Tool using <code>/redhook wand</code></li> <li>Left-click the target block to begin binding</li> <li>Select your configured action from the menu</li> <li>Choose the trigger condition:<ul> <li>On redstone power</li> <li>On redstone power loss</li> <li>Both conditions</li> </ul> </li> <li>Test the configuration by placing a redstone lever and toggling it</li> <li>Your action binding is now complete and ready to use!</li> </ol>"},{"location":"references/actions/http-action/","title":"HTTP Action","text":""},{"location":"references/actions/http-action/#description","title":"Description","text":"<p>The HTTP Action allows you to make HTTP requests to external services when a redstone signal is triggered. This is useful for integrating with webhooks, APIs, or other web services.</p>"},{"location":"references/actions/http-action/#configuration","title":"Configuration","text":""},{"location":"references/actions/http-action/#basic-structure","title":"Basic Structure","text":"<pre><code>actions:\n    - id: webhook_notification              # Unique action ID\n      type: HttpAction                      # Type\n      label: \"Discord Webhook\"              # Friendly Name\n      description:                          # Multi-line action description\n        - Sends a notification\n        - to Discord channel\n\n      # Action-specific configuration\n      url: \"https://discord.com/api/webhooks/...\"  # Target URL\n      method: \"POST\"                        # HTTP method\n      headers:                              # HTTP headers\n          Content-Type: \"application/json\"\n      body: |                               # Request body\n          {\n              \"content\": \"Redstone signal detected!\"\n          }\n</code></pre>"},{"location":"references/actions/http-action/#configuration-options","title":"Configuration Options","text":"Option Type Description Required <code>id</code> String Unique identifier for the action Yes <code>type</code> String Must be <code>HttpAction</code> Yes <code>label</code> String Display name for the action Yes <code>description</code> List Multi-line description of the action No <code>url</code> String The URL to send the request to Yes <code>method</code> String HTTP method (GET, POST, PUT, DELETE) Yes <code>headers</code> Map HTTP headers to include in the request No <code>body</code> String Request body content No"},{"location":"references/actions/http-action/#examples","title":"Examples","text":""},{"location":"references/actions/http-action/#discord-webhook","title":"Discord Webhook","text":"<pre><code>actions:\n    - id: discord_alert\n      type: HttpAction\n      label: \"Discord Alert\"\n      description:\n          - Sends an alert\n          - to Discord channel\n      url: \"https://discord.com/api/webhooks/your-webhook-url\"\n      method: \"POST\"\n      headers:\n          Content-Type: \"application/json\"\n      body: |\n          {\n              \"content\": \"Redstone signal detected!\",\n              \"embeds\": [{\n                  \"title\": \"Redstone Alert\",\n                  \"description\": \"A redstone signal was triggered\",\n                  \"color\": 16711680\n              }]\n          }\n</code></pre>"},{"location":"references/actions/http-action/#api-request","title":"API Request","text":"<pre><code>actions:\n    - id: api_call\n      type: HttpAction\n      label: \"API Request\"\n      description:\n          - Makes an API call\n          - to external service\n      url: \"https://api.example.com/endpoint\"\n      method: \"GET\"\n      headers:\n          Authorization: \"Bearer your-token\"\n          Accept: \"application/json\"\n</code></pre>"},{"location":"references/actions/http-action/#usage-notes","title":"Usage Notes","text":"<ul> <li>The <code>url</code> must be a valid HTTP/HTTPS URL</li> <li>Supported HTTP methods are: GET, POST, PUT, DELETE</li> <li>For POST/PUT requests, you can include a request body</li> <li>Headers are optional but often required for authentication</li> <li>The action will not retry failed requests</li> <li>Long-running requests may impact server performance</li> <li>HTTPS URLs are recommended for security</li> </ul>"},{"location":"references/actions/http-action/#best-practices","title":"Best Practices","text":"<ul> <li>Use descriptive IDs that indicate the purpose of the request</li> <li>Keep request bodies concise and well-formatted</li> <li>Use appropriate HTTP methods for your use case</li> <li>Test the endpoint before deploying</li> <li>Use HTTPS for all external requests</li> <li>Consider rate limiting for frequent triggers</li> </ul>"},{"location":"references/actions/player-message-action/","title":"Player Message Action","text":""},{"location":"references/actions/player-message-action/#description","title":"Description","text":"<p>The PlayerMessageAction allows you to send chat messages to specific players or broadcast messages to all players when a redstone signal is triggered.</p>"},{"location":"references/actions/player-message-action/#configuration","title":"Configuration","text":""},{"location":"references/actions/player-message-action/#basic-structure","title":"Basic Structure","text":"<pre><code>actions:\n    - id: player_message                    # Unique action ID\n      type: PlayerMessageAction             # Type\n      label: \"Example Player Message\"       # Friendly Name\n      description:                          # Multi-line action description\n        - Sends a message to a player\n        - or broadcasts to all players\n\n      # Action-specific configuration\n      message: \"Hello player!\"              # The message to send\n      target: STEVE                         # Target player name (null for broadcast)\n</code></pre>"},{"location":"references/actions/player-message-action/#configuration-options","title":"Configuration Options","text":"Option Type Description Required <code>id</code> String Unique identifier for the action Yes <code>type</code> String Must be <code>PlayerMessageAction</code> Yes <code>label</code> String Display name for the action Yes <code>description</code> List Multi-line description of the action No <code>message</code> String The message to send to players Yes <code>target</code> String Target player name. Use <code>null</code> for broadcast No"},{"location":"references/actions/player-message-action/#examples","title":"Examples","text":""},{"location":"references/actions/player-message-action/#broadcast-message","title":"Broadcast Message","text":"<pre><code>actions:\n    - id: server_announcement\n      type: PlayerMessageAction\n      label: \"Server Announcement\"\n      description:\n          - Broadcasts a message\n          - to all online players\n      message: \"Welcome to the server!\"\n      target: null\n</code></pre>"},{"location":"references/actions/player-message-action/#private-message","title":"Private Message","text":"<pre><code>actions:\n    - id: private_welcome\n      type: PlayerMessageAction\n      label: \"Private Welcome\"\n      description:\n          - Sends a private welcome message\n          - to a specific player\n      message: \"Welcome back, STEVE!\"\n      target: \"STEVE\"\n</code></pre>"},{"location":"references/actions/player-message-action/#usage-notes","title":"Usage Notes","text":"<ul> <li>The <code>target</code> field is optional. If not specified or set to <code>null</code>, the message will be broadcast to all players</li> <li>You can use Minecraft color codes in the message using the <code>&amp;</code> symbol</li> <li>The message supports basic formatting like bold (<code>&amp;l</code>), italic (<code>&amp;o</code>), and colors (<code>&amp;c</code> for red, etc.)</li> <li>If the target player is not online, the message will not be sent</li> <li>Messages are sent through the server's chat system, so they will appear in the chat log</li> </ul>"},{"location":"references/actions/player-message-action/#best-practices","title":"Best Practices","text":"<ul> <li>Use descriptive IDs that indicate the purpose of the message</li> <li>Keep messages concise and clear</li> <li>Consider using color codes to make important messages stand out</li> <li>Test private messages with the target player online</li> <li>Use broadcast messages sparingly to avoid chat spam</li> </ul>"}]}